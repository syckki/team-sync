import React, { useEffect } from 'react';
import { ThemeProvider } from 'styled-components';
import Head from 'next/head';
import Layout from '../components/Layout';
import { initNetworkMonitoring, startPeriodicConnectivityChecks } from '../lib/networkService';

// Create a theme
const theme = {
  colors: {
    primary: '#3498db',
    primaryDark: '#2980b9',
    secondary: '#2ecc71',
    secondaryDark: '#27ae60',
    background: '#ffffff',
    backgroundAlt: '#f8f9fa',
    backgroundHover: '#f0f0f0',
    text: '#333333',
    textLight: '#666666',
    border: '#ddd',
    error: '#e74c3c',
    errorBg: '#fdeded',
    success: '#2ecc71',
    successBg: '#effaf3',
    warning: '#f39c12',
    info: '#3498db',
    card: '#ffffff'
  },
  fonts: {
    main: 'Helvetica, Arial, sans-serif'
  },
  breakpoints: {
    mobile: '768px'
  }
};

// This default export is required in a new `pages/_app.js` file.
export default function MyApp({ Component, pageProps }) {
  // Initialize network monitoring and PWA support
  useEffect(() => {
    if (typeof window !== 'undefined') {
      // Initialize network monitoring service
      initNetworkMonitoring();
      
      // Start periodic connectivity checks
      const stopChecks = startPeriodicConnectivityChecks(30000);
      
      // Register service worker generated by next-pwa
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          console.log('Ready to register service worker');
        });
      }
      
      return () => {
        // Clean up the periodic checks when the component unmounts
        stopChecks();
      };
    }
  }, []);

  return (
    <>
      <Head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no" />
        <meta name="theme-color" content="#3498db" />
        <meta name="description" content="End-to-end encrypted secure messaging with offline support" />
        <link rel="manifest" href="/manifest.json" />
        <link rel="icon" type="image/png" sizes="512x512" href="/icon-512x512.png" />
        <link rel="apple-touch-icon" sizes="512x512" href="/icon-512x512.png" />
        <title>SecureShare Encrypted Messaging</title>
      </Head>
      <ThemeProvider theme={theme}>
        <Layout>
          <Component {...pageProps} />
        </Layout>
      </ThemeProvider>
    </>
  );
}
